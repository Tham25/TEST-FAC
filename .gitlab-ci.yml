stages:
  - lint
  - test
  - deloy


variables:
  DOCKER_TLS_CERTDIR: ""
  GIT_SUBMODULE_STRATEGY: recursive

test_stage:
  image: node:18.14.0
  stage: lint
  script:
    - yarn add eslint@7.32.0 --legacy-peer-deps
    - node_modules/eslint/bin/eslint.js src/ 

deloy_product:
  image: alpine:3.11
  # tags:
  #   - odin
  stage : deloy
  before_script:
  # Setup SSH deploy keys
    - "which ssh-agent || ( apk update && apk add openssh-client )"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_STAGING" | tr -d '\r' | ssh-add -
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh $SSH_USERNAME_STAGING@$SSH_HOST_STAGING "mkdir -p ~/OdinWebFactory/web"
    - ssh $SSH_USERNAME_STAGING@$SSH_HOST_STAGING "cd ~/OdinWebFactory/web && rm -rf .git "
    - rm -rf $(pwd)/.git 
    - scp -p -r $(pwd)/* $SSH_USERNAME_STAGING@$SSH_HOST_STAGING:~/OdinWebFactory/web/
    - ssh $SSH_USERNAME_STAGING@$SSH_HOST_STAGING "cd ~/OdinWebFactory/web ; docker build . -t odin_fac_web ; docker stop odin_fac_web ; docker rm odin_fac_web ; docker run -d --name odin_fac_web -p 8084:80 odin_fac_web ; exit"
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-beta$/

deloy_stage:
  image: alpine:3.11
  # tags:
  #   - odin
  stage : deloy
  before_script:
  # Setup SSH deploy keys
    - "which ssh-agent || ( apk update && apk add openssh-client )"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_STAGING" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh $SSH_USERNAME_STAGING@$SSH_HOST_STAGING "mkdir -p ~/OdinWebFactory/web2"
    - ssh $SSH_USERNAME_STAGING@$SSH_HOST_STAGING "cd ~/OdinWebFactory/web2 && rm -rf .git "
    - rm -rf $(pwd)/.git 
    - scp -p -r $(pwd)/* $SSH_USERNAME_STAGING@$SSH_HOST_STAGING:~/OdinWebFactory/web2/
    - ssh $SSH_USERNAME_STAGING@$SSH_HOST_STAGING " cd ~/OdinWebFactory/web2 ; docker build . -t odin_fac_web2 ; docker stop odin_fac_web2 ; docker rm odin_fac_web2 ; docker run -d --name odin_fac_web2 -p 8085:80 odin_fac_web2 ; exit"
  only:
    - master